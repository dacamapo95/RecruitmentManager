@model RecruitmentManager.Web.ViewModels.CandidatesViewModel

@{
    ViewData["Title"] = "Candidates";
}

<h1>Candidates</h1>

<div class="row mb-3">
    <div class="col-md-6">
        <form method="get" class="form-inline">
            <div class="input-group">
                <input type="text" name="searchTerm" class="form-control" placeholder="Search..." value="@Model.SearchTerm">

                <select name="stateId" class="form-select"
                        asp-items="@(new SelectList(Model.States, "Id", "Name", Model.StateId))"
                        onchange="this.form.submit();">
                    <option value="">All States</option>
                </select>

                <input type="hidden" name="sortColumn" value="@Model.SortColumn" />
                <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
                <input type="hidden" name="page" value="1" />
                <input type="hidden" name="pageSize" value="@Model.PageSize" />

                <button class="btn btn-outline-primary" type="submit">Search</button>
            </div>
        </form>
    </div>
    <div class="col-md-6 text-end">
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (Model.Candidates?.Items == null || !Model.Candidates.Items.Any())
{
    <div class="alert alert-info">
        No candidates found.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-sortColumn="fullName"
                           asp-route-sortOrder="@Model.GetSortOrder("fullName")"
                           asp-route-page="1"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-stateId="@Model.StateId">
                            Full Name @Html.Raw(Model.GetSortIcon("fullName"))
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-sortColumn="email"
                           asp-route-sortOrder="@Model.GetSortOrder("email")"
                           asp-route-page="1"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-stateId="@Model.StateId">
                            Email @Html.Raw(Model.GetSortIcon("email"))
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-sortColumn="state"
                           asp-route-sortOrder="@Model.GetSortOrder("state")"
                           asp-route-page="1"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-stateId="@Model.StateId">
                            State @Html.Raw(Model.GetSortIcon("state"))
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-sortColumn="createdAt"
                           asp-route-sortOrder="@Model.GetSortOrder("createdAt")"
                           asp-route-page="1"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-stateId="@Model.StateId">
                            Created Date @Html.Raw(Model.GetSortIcon("createdAt"))
                        </a>
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Candidates.Items)
                {
                    <tr>
                        <td>@item.FirstName @item.SurName</td>
                        <td>@item.Email</td>
                        <td>
                            @{
                                var stateName = Model.States?.FirstOrDefault(s => s.Id == item.StateId)?.Name ?? item.StateId.ToString();
                            }
                            @stateName
                        </td>
                        <td>@item.CreatedAtUtc.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                                <button type="button" class="btn btn-danger delete-candidate" 
                                        data-id="@item.Id" 
                                        data-name="@item.FirstName @item.SurName">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between align-items-center">
        <div>
            Showing @((Model.Page - 1) * Model.PageSize + 1) to @(Math.Min(Model.Page * Model.PageSize, Model.Candidates.TotalCount)) of @Model.Candidates.TotalCount entries
        </div>
        <div>
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.Candidates.Page > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-sortColumn="@Model.SortColumn"
                               asp-route-sortOrder="@Model.SortOrder"
                               asp-route-page="1"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-stateId="@Model.StateId">First</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" asp-action="Index"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-sortColumn="@Model.SortColumn"
                               asp-route-sortOrder="@Model.SortOrder"
                               asp-route-page="@(Model.Candidates.Page - 1)"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-stateId="@Model.StateId">Previous</a>
                        </li>
                    }

                    @{
                        int totalPages = (int)Math.Ceiling(Model.Candidates.TotalCount / (double)Model.Candidates.PageSize);
                        int startPage = Math.Max(1, Model.Candidates.Page - 2);
                        int endPage = Math.Min(totalPages, Model.Candidates.Page + 2);
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == Model.Candidates.Page ? "active" : "")">
                            <a class="page-link" asp-action="Index"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-sortColumn="@Model.SortColumn"
                               asp-route-sortOrder="@Model.SortOrder"
                               asp-route-page="@i"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-stateId="@Model.StateId">@i</a>
                        </li>
                    }

                    @if (Model.Candidates.Page < totalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-sortColumn="@Model.SortColumn"
                               asp-route-sortOrder="@Model.SortOrder"
                               asp-route-page="@(Model.Candidates.Page + 1)"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-stateId="@Model.StateId">Next</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" asp-action="Index"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-sortColumn="@Model.SortColumn"
                               asp-route-sortOrder="@Model.SortOrder"
                               asp-route-page="@totalPages"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-stateId="@Model.StateId">Last</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
}

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the candidate <strong id="candidateName"></strong>?
                <p class="text-danger mt-2">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" asp-action="Delete" method="post">
                    <input type="hidden" id="candidateId" name="id" value="" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function() {
            $('.delete-candidate').click(function() {
                const id = $(this).data('id');
                const name = $(this).data('name');
                
                $('#candidateId').val(id);
                $('#candidateName').text(name);
                
                const modal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
                modal.show();
            });
        });
    </script>
}