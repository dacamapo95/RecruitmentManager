@model RecruitmentManager.Web.ViewModels.CreateCandidateViewModel

@{
    ViewData["Title"] = "Create Candidate";
}

<h1>Create Candidate</h1>

<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5>Personal Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="FirstName" class="form-label"></label>
                                <input asp-for="FirstName" class="form-control" />
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="SurName" class="form-label"></label>
                                <input asp-for="SurName" class="form-control" />
                                <span asp-validation-for="SurName" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Email" class="form-label"></label>
                                <input asp-for="Email" class="form-control" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="PhoneNumber" class="form-label"></label>
                                <input asp-for="PhoneNumber" class="form-control" />
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="DateOfBirth" class="form-label"></label>
                                <input asp-for="DateOfBirth" class="form-control" type="date" />
                                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="StateId" class="form-label"></label>
                                <select asp-for="StateId" class="form-select"
                                        asp-items="@(new SelectList(Model.States, "Id", "Name"))">
                                    <option value="">Select a state</option>
                                </select>
                                <span asp-validation-for="StateId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5>Address</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label asp-for="Street" class="form-label"></label>
                                <input asp-for="Street" class="form-control" />
                                <span asp-validation-for="Street" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CountryId" class="form-label"></label>
                                <select asp-for="CountryId" id="countrySelect" class="form-select"
                                        asp-items="@(new SelectList(Model.Countries, "Id", "Name"))">
                                    <option value="">Select a country</option>
                                </select>
                                <span asp-validation-for="CountryId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CityId" class="form-label"></label>
                                <select asp-for="CityId" id="citySelect" class="form-select"
                                        asp-items="@(Model.Cities != null ? new SelectList(Model.Cities, "Id", "Name") : null)">
                                    <option value="">Select a city</option>
                                </select>
                                <span asp-validation-for="CityId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="ZipCode" class="form-label"></label>
                                <input asp-for="ZipCode" class="form-control" />
                                <span asp-validation-for="ZipCode" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5>Work Experience</h5>
                    <button type="button" class="btn btn-success" id="addExperience">Add Experience</button>
                </div>
                <div class="card-body" id="experiencesContainer">
                    <div class="experience-item border rounded p-3 mb-3">
                        <div class="d-flex justify-content-between mb-2">
                            <h6>Experience #1</h6>
                            <button type="button" class="btn btn-danger btn-sm remove-experience" disabled>Remove</button>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Experiences[0].Company" class="form-label">Company</label>
                                    <input asp-for="Experiences[0].Company" class="form-control" />
                                    <span asp-validation-for="Experiences[0].Company" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Experiences[0].Job" class="form-label">Job</label>
                                    <input asp-for="Experiences[0].Job" class="form-control" />
                                    <span asp-validation-for="Experiences[0].Job" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label asp-for="Experiences[0].Description" class="form-label">Description</label>
                                    <textarea asp-for="Experiences[0].Description" class="form-control" rows="2"></textarea>
                                    <span asp-validation-for="Experiences[0].Description" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Experiences[0].StartDate" class="form-label">Start Date</label>
                                    <input asp-for="Experiences[0].StartDate" class="form-control" type="date" />
                                    <span asp-validation-for="Experiences[0].StartDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Experiences[0].EndDate" class="form-label">End Date</label>
                                    <input asp-for="Experiences[0].EndDate" class="form-control" type="date" />
                                    <span asp-validation-for="Experiences[0].EndDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Experiences[0].Salary" class="form-label">Salary</label>
                                    <input asp-for="Experiences[0].Salary" class="form-control" type="number" step="0.01" />
                                    <span asp-validation-for="Experiences[0].Salary" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Experiences[0].Currency" class="form-label">Currency</label>
                                    <input asp-for="Experiences[0].Currency" class="form-control" maxlength="3" />
                                    <span asp-validation-for="Experiences[0].Currency" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group mb-4">
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Country change event to load cities
            const countrySelect = document.getElementById('countrySelect');
            const citySelect = document.getElementById('citySelect');

            countrySelect.addEventListener('change', function () {
                const countryId = this.value;
                if (!countryId) {
                    citySelect.innerHTML = '<option value="">Select a city</option>';
                    return;
                }

                fetch(`/Candidates/GetCitiesByCountry?countryId=${countryId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            citySelect.innerHTML = '<option value="">Select a city</option>';
                            data.cities.forEach(city => {
                                const option = document.createElement('option');
                                option.value = city.id;
                                option.textContent = city.name;
                                citySelect.appendChild(option);
                            });
                        } else {
                            citySelect.innerHTML = '<option value="">No cities found</option>';
                        }
                    })
                    .catch(error => {
                        console.error('Error loading cities:', error);
                        citySelect.innerHTML = '<option value="">Error loading cities</option>';
                    });
            });

            const experiencesContainer = document.getElementById('experiencesContainer');
            const addExperienceBtn = document.getElementById('addExperience');

            addExperienceBtn.addEventListener('click', function () {
                const index = document.querySelectorAll('.experience-item').length;

                if (index === 1) {
                    document.querySelector('.remove-experience').removeAttribute('disabled');
                }

                const experienceHtml = `
                <div class="experience-item border rounded p-3 mb-3">
                    <div class="d-flex justify-content-between mb-2">
                        <h6>Experience #${index + 1}</h6>
                        <button type="button" class="btn btn-danger btn-sm remove-experience">Remove</button>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" for="Experiences_${index}__Company">Company</label>
                                <input class="form-control" type="text" name="Experiences[${index}].Company" id="Experiences_${index}__Company" required data-val="true" data-val-required="Company name is required" data-val-length-max="100" data-val-length="Company name cannot exceed 100 characters" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Experiences[${index}].Company" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" for="Experiences_${index}__Job">Job</label>
                                <input class="form-control" type="text" name="Experiences[${index}].Job" id="Experiences_${index}__Job" required data-val="true" data-val-required="Job title is required" data-val-length-max="100" data-val-length="Job title cannot exceed 100 characters" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Experiences[${index}].Job" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label class="form-label" for="Experiences_${index}__Description">Description</label>
                                <textarea class="form-control" rows="2" name="Experiences[${index}].Description" id="Experiences_${index}__Description" data-val="true" data-val-length-max="4000" data-val-length="Description cannot exceed 4000 characters"></textarea>
                                <span class="text-danger field-validation-valid" data-valmsg-for="Experiences[${index}].Description" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" for="Experiences_${index}__StartDate">Start Date</label>
                                <input class="form-control" type="date" name="Experiences[${index}].StartDate" id="Experiences_${index}__StartDate" required data-val="true" data-val-required="Start date is required" value="${new Date(new Date().setFullYear(new Date().getFullYear() - 2)).toISOString().split('T')[0]}" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Experiences[${index}].StartDate" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" for="Experiences_${index}__EndDate">End Date</label>
                                <input class="form-control" type="date" name="Experiences[${index}].EndDate" id="Experiences_${index}__EndDate" value="${new Date().toISOString().split('T')[0]}" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Experiences[${index}].EndDate" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" for="Experiences_${index}__Salary">Salary</label>
                                <input class="form-control" type="number" step="0.01" name="Experiences[${index}].Salary" id="Experiences_${index}__Salary" required data-val="true" data-val-required="Salary is required" data-val-range="Salary must be greater than 0" data-val-range-min="0.01" data-val-range-max="1.7976931348623157E+308" value="0" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Experiences[${index}].Salary" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" for="Experiences_${index}__Currency">Currency</label>
                                <input class="form-control" type="text" name="Experiences[${index}].Currency" id="Experiences_${index}__Currency" maxlength="3" required data-val="true" data-val-required="Currency is required" data-val-length-max="3" data-val-length-min="3" data-val-length="Currency must be exactly 3 characters" value="USD" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Experiences[${index}].Currency" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    </div>
                </div>
                `;

                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = experienceHtml.trim();
                experiencesContainer.appendChild(tempDiv.firstElementChild);

                if (typeof $.validator !== 'undefined') {
                    $('form').data('validator', null);
                    $.validator.unobtrusive.parse('form');
                }
            });

            experiencesContainer.addEventListener('click', function (e) {
                if (e.target.classList.contains('remove-experience')) {
                    const items = document.querySelectorAll('.experience-item');

                    if (items.length <= 1) {
                        return;
                    }

                    const experienceItem = e.target.closest('.experience-item');
                    experienceItem.remove();

                    document.querySelectorAll('.experience-item').forEach((item, idx) => {
                        item.querySelector('h6').textContent = `Experience #${idx + 1}`;

                        if (document.querySelectorAll('.experience-item').length === 1) {
                            document.querySelector('.remove-experience').setAttribute('disabled', 'disabled');
                        }
                    });

                    if (typeof $.validator !== 'undefined') {
                        $('form').data('validator', null);
                        $.validator.unobtrusive.parse('form');
                    }
                }
            });
        });
    </script>
}